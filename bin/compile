#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir>
BP=$(dirname $(dirname $0))
source $BP/bin/functions.sh

ls -l /dev/
echo "test" &>$STDOUT

if [[ -z "${1:-}" ]]; then
	err "Missing argument <build-dir>"
fi
BUILDDIR=$(cd "${1:-}/" && pwd)

if [[ -z "${2:-}" ]]; then
	err "Missing argument <cache-dir>"
fi
CACHEDIR=$(cd "${2:-}" && pwd)

if [[ ! -f "${BUILDDIR}/Logstash" ]]; then
	err "${BUILDDIR}/Logstash not found."
fi

# Source ubuntu distribution information
if [[ -f "/etc/lsb-release" ]]; then
	source /etc/lsb-release
fi

source ${BUILDDIR}/Logstash

# Default Values
LOGSTASH_CMD_ARGS=${LOGSTASH_CMD_ARGS:-""}
LOGSTASH_PLUGINS=${LOGSTASH_PLUGINS:-()}
LOGSTASH_CONFIG_CHECK=${LOGSTASH_CONFIG_CHECK:-1}
LOGSTASH_VERSION=${LOGSTASH_VERSION:-$(cat ${BP}/VERSION)}
LOGSTASH_FILE=${LOGSTASH_FILE:-"logstash-${LOGSTASH_VERSION}.tar.gz"}
LOGSTASH_URL=${LOGSTASH_URL:-"https://download.elastic.co/logstash/logstash/${LOGSTASH_FILE}"}
SHA1_EXT=${SHA1_EXT:-".sha1.txt"}
OPENJDK_VERSION=${OPENJDK_VERSION:-"1.7.0_51"}
OPENJDK_URL=${OPENJDK_URL:-"https://java-buildpack.cloudfoundry.org/openjdk-jdk/${DISTRIB_CODENAME:-trusty}/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz"}
DOCKERIZE_VERSION=${DOCKERIZE_VERSION:-"v0.2.1-jsonQuery"}
DOCKERIZE_URL=${DOCKERIZE_URL:-"https://github.com/breml/dockerize/releases/download/v0.2.1-jsonQuery/dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz"}

if [[ ! -f ${BUILDDIR}/dockerize ]]; then
	start "Installing dockerize"
	mkdir ${BUILDDIR}/bin
	cd ${BUILDDIR}/bin
	${CURL} ${DOCKERIZE_URL} | tar zxf -
	finished
	step "downloaded ${DOCKERIZE_URL}"
fi

if [[ ! -d ${BUILDDIR}/openjdk ]]; then
	start "Installing openjdk"
	mkdir -p ${BUILDDIR}/openjdk
	cd ${BUILDDIR}/openjdk
	${CURL} ${OPENJDK_URL} | tar zxf -
	finished
	step "downloaded ${OPENJDK_URL}"
fi

if [[ ! -d ${BUILDDIR}/logstash-${LOGSTASH_VERSION} ]]; then
	start "Installing Logstash ${LOGSTASH_VERSION}"
	${CURL} -o "${CACHEDIR}/${LOGSTASH_FILE}" "${LOGSTASH_URL}"

	${CURL} -o "${CACHEDIR}/${LOGSTASH_FILE}${SHA1_EXT}" "${LOGSTASH_URL}${SHA1_EXT}"
	cd ${CACHEDIR}
	sha1sum --check ${CACHEDIR}/${LOGSTASH_FILE}${SHA1_EXT} &>$STDOUT

	tar -zx -C ${BUILDDIR} -f ${CACHEDIR}/${LOGSTASH_FILE}
	finished
	step "downloaded ${LOGSTASH_URL}"
fi

export JAVA_HOME="${BUILDDIR}/openjdk"

# Install Logstash Plugins
if [[ -n ${LOGSTASH_PLUGINS:-""} ]]; then
		step "Installing Logstash Plugins"
		LOGSTASH_PLUGIN_CMD="logstash-plugin"
		if [[ ! -x ${BUILDDIR}/logstash-${LOGSTASH_VERSION}/bin/${LOGSTASH_PLUGIN_CMD} ]]; then
			LOGSTASH_PLUGIN_CMD="plugin"
		fi
        for PLUGIN in "${LOGSTASH_PLUGINS[@]}"; do
                start "Installing Logstash Plugin ${PLUGIN}"
                ${BUILDDIR}/logstash-${LOGSTASH_VERSION}/bin/${LOGSTASH_PLUGIN_CMD} install ${PLUGIN} &>$STDOUT
                finished
        done
fi

# Logstash config check
if [[ ${LOGSTASH_CONFIG_CHECK} -eq 1 ]]; then
	mkdir -p ${CACHEDIR}/conf.d

	start "Check Logstash configuration"
	${BUILDDIR}/bin/dockerize -template ${BUILDDIR}/logstash.conf:${CACHEDIR}/conf.d/logstash.conf ${BUILDDIR}/logstash-${LOGSTASH_VERSION}/bin/logstash -f ${CACHEDIR}/conf.d/logstash.conf -t &>>$STDOUT
	finished
fi

mkdir ${BUILDDIR}/conf.d

cat << EOF >> ${BUILDDIR}/buildpack-release-step.yml
---
default_process_types:
  web: dockerize -template logstash.conf:conf.d/logstash.conf logstash-${LOGSTASH_VERSION}/bin/logstash -f conf.d/logstash.conf ${LOGSTASH_CMD_ARGS}
EOF

mkdir -p ${BUILDDIR}/.profile.d
echo 'JAVA_HOME=$HOME/openjdk' > ${BUILDDIR}/.profile.d/openjdk.sh
echo 'PATH=$PATH:$HOME/bin:$HOME/openjdk/bin' > ${BUILDDIR}/.profile.d/path.sh
